<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns=" http://www.springframework.org/schema/beans"
       xmlns:xsi=" http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch=" http://www.springframework.org/schema/batch"

       xsi:schemaLocation=" http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="propertyConfigure"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>./conf/application.properties</value>
            </list>
        </property>
    </bean>


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="10"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="testWhileIdle" value="true"/>

        <!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20"/>

        <!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->

        <property name="defaultAutoCommit" value="true"/>

        <!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
        <property name="validationQuery" value="select 1 "/>
        <property name="filters" value="stat"/>
        <property name="proxyFilters">
            <list>
                <ref bean="logFilter"/>
            </list>
        </property>
    </bean>

    <!--&lt;!&ndash; 数据库连接 &ndash;&gt;-->
    <!--<bean id="dataBasePasswordCallback" class="com.haiyoung.util.DataBasePasswordCallback"/>-->
    <!--<bean id="dataSource_pyxis" class="com.alibaba.druid.pool.DruidDataSource"-->
          <!--destroy-method="close" init-method="init" lazy-init="true">-->
        <!--&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;-->
        <!--<property name="url" value="${db.url}"/>-->
        <!--<property name="username" value="${db.username}"/>-->
        <!--<property name="password" value="${db.password}"/>-->
        <!--<property name="connectionProperties"-->
                  <!--value="......"/>-->
        <!--<property name="passwordCallback" ref="dataBasePasswordCallback"/>-->

        <!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
        <!--<property name="initialSize" value="${db.initialSize}"/>-->
        <!--<property name="minIdle" value="${db.minIdle}"/>-->
        <!--<property name="maxActive" value="${db.maxActive}"/>-->
        <!--&lt;!&ndash; 配置获取连接等待超时的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="maxWait" value="${db.maxWait}"/>-->
        <!--&lt;!&ndash; 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true &ndash;&gt;-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="${db.maxPoolPreparedStatementPerConnectionSize}"/>-->
        <!--&lt;!&ndash; 配置间隔多久才进行一次检测（启动destroy线程），检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}"/>-->
        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒；即最多允许一个连接空闲多长时间，超出此时间的连接，会被destroy线程关闭 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>-->
        <!--&lt;!&ndash; 对空闲接连再被使用时，如果空闲时间超过timeBetweenEvictionRunsMillis，会发出验证sql进行有效检测 &ndash;&gt;-->
        <!--<property name="testWhileIdle" value="true"/>-->
        <!--<property name="testOnBorrow" value="false"/>-->
        <!--<property name="testOnReturn" value="false"/>-->
        <!--<property name="validationQuery" value="${db.validationQuery}"/>-->
        <!--&lt;!&ndash; 移除执行超时的sql，单位是秒 &ndash;&gt;-->
        <!--<property name="removeAbandoned" value="${db.removeAbandoned}"/>-->
        <!--<property name="removeAbandonedTimeout" value="${db.removeAbandonedTimeout}"/>-->
        <!--<property name="logAbandoned" value="true"/>-->

        <!--&lt;!&ndash; 配置监控统计拦截的filters-->
        <!--Druid的监控统计功能是通过filter-chain扩展实现，如果你要打开监控统计功能，配置StatFilter，具体看这里-->
        <!--&ndash;&gt;-->
        <!--<property name="proxyFilters">-->
            <!--<list>-->
                <!--<ref bean="druid_stat_filter"/>-->
                <!--<ref bean="druid_wall_filter"/>-->
                <!--<ref bean="druid_log_filter"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean class="com.alibaba.druid.filter.stat.StatFilter" id="druid_stat_filter">-->
        <!--&lt;!&ndash; 慢sql规则，单位毫秒 &ndash;&gt;-->
        <!--<property name="slowSqlMillis" value="10000"/>-->
        <!--&lt;!&ndash; 记录慢sql到日志 &ndash;&gt;-->
        <!--<property name="logSlowSql" value="true"/>-->
        <!--&lt;!&ndash; 统计时合并相似sql &ndash;&gt;-->
        <!--<property name="mergeSql" value="true"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; sql防御 &ndash;&gt;-->
    <!--<bean class="com.alibaba.druid.wall.WallFilter" id="druid_wall_filter">-->
        <!--&lt;!&ndash; 记录违反规则的sql到日志 &ndash;&gt;-->
        <!--<property name="logViolation" value="true"/>-->
    <!--</bean>-->

    <!--<bean class="com.alibaba.druid.filter.logging.Slf4jLogFilter" id="druid_log_filter">-->
        <!--&lt;!&ndash; 记录真正执行的语句，即参数已注入的sql &ndash;&gt;-->
        <!--<property name="statementExecutableSqlLogEnable" value="true"/>-->
        <!--&lt;!&ndash; 其它配置 &ndash;&gt;-->
        <!--<property name="statementCreateAfterLogEnabled" value="false"/>-->
        <!--<property name="statementPrepareAfterLogEnabled" value="false"/>-->
        <!--<property name="statementParameterSetLogEnabled" value="false"/>-->
        <!--<property name="statementCloseAfterLogEnabled" value="false"/>-->
        <!--<property name="resultSetCloseAfterLogEnabled" value="false"/>-->
    <!--</bean>-->



    <!-- druid配合日志框架，监控日志状态 -->
    <bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="statementExecutableSqlLogEnable" value="false"/>
    </bean>

</beans>